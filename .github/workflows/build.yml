name: build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Install Ubuntu dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libasound-dev libdbus-1-dev xorg-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Upload Ubuntu Epoch binary
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: epoch_ubuntu
        path: build/src/epoch
        retention-days: 2
    - name: Upload Windows Epoch binary
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: epoch_windows
        path: build/src/Release/epoch.exe
        retention-days: 2
    - name: Upload MacOS Epoch binary
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v3
      with:
        name: epoch_macos
        path: build/src/epoch
        retention-days: 2

    - name: Upload Ubuntu ZEX binary
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v3
      with:
        name: ubuntu_zex_binary
        path: build/src/zxspectrum/epoch_zxspectrum_zex
        retention-days: 2

  zexall:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download ZEX binary
        uses: actions/download-artifact@v3
        with:
          name: ubuntu_zex_binary

      # See https://github.com/actions/upload-artifact/issues/38
      - name: Restore permissions
        run: chmod +x epoch_zxspectrum_zex
      - name: Run Z80 Excerciser tests
        run: ./epoch_zxspectrum_zex
        # run: ./epoch_zxspectrum_zex | tee zex.txt
